// ************* BINARY OPERATORS *************

// LUT logic: binary NOT
//            return !trit1
lut not {
  false = true 
  true  = false
}

// LUT logic: binary AND
//            return (trit1 & trit2)
lut and {
  false, false = false
  false, true  = false
  true,  false = false
  true,  true  = true 
}

// LUT logic: binary AND
//            return (trit1 & trit2 & trit3)
lut and3 {
  false, false, false = false
  false, false, true  = false
  false, true,  false = false
  false, true,  true  = false
  true,  false, false = false
  true,  false, true  = false
  true,  true,  false = false
  true,  true,  true  = true 
}

// LUT logic: binary OR
//            return (trit1 | trit2)
lut or {
  false, false = false
  false, true  = true 
  true,  false = true 
  true,  true  = true 
}

// LUT logic: binary OR
//            return (trit1 | trit2 | trit3)
lut or3 {
  false, false, false = false
  false, false, true  = true 
  false, true,  false = true 
  false, true,  true  = true 
  true,  false, false = true 
  true,  false, true  = true 
  true,  true,  false = true 
  true,  true,  true  = true 
}

// LUT logic: binary XOR
//            return (trit1 ^ trit2)
lut xor {
  false, false = false
  false, true  = true 
  true,  false = true 
  true,  true  = false
}

// LUT logic: binary XOR
//            return (trit1 ^ trit2 ^ trit3)
lut xor3 {
  false, false, false = false
  false, false, true  = true 
  false, true,  false = true 
  false, true,  true  = false
  true,  false, false = true 
  true,  false, true  = false
  true,  true,  false = false
  true,  true,  true  = true 
}

// LUT logic: binary NAND
//            return !(trit1 & trit2)
lut nand {
  false, false = true 
  false, true  = true 
  true,  false = true 
  true,  true  = false
}

// LUT logic: binary NAND
//            return !(trit1 & trit2 & trit3)
lut nand3 {
  false, false, false = true 
  false, false, true  = true 
  false, true,  false = true 
  false, true,  true  = true 
  true,  false, false = true 
  true,  false, true  = true 
  true,  true,  false = true 
  true,  true,  true  = false
}

// LUT logic: binary NOR
//            return !(trit1 | trit2)
lut nor {
  false, false = true 
  false, true  = false
  true,  false = false
  true,  true  = false
}

// LUT logic: binary NOR
//            return !(trit1 | trit2 | trit3)
lut nor3 {
  false, false, false = true 
  false, false, true  = false
  false, true,  false = false
  false, true,  true  = false
  true,  false, false = false
  true,  false, true  = false
  true,  true,  false = false
  true,  true,  true  = false
}

// LUT logic: binary XNOR
//            return !(trit1 ^ trit2)
lut xnor {
  false, false = true 
  false, true  = false
  true,  false = false
  true,  true  = true 
}
